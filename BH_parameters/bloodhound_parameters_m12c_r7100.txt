################################################################################################
### Parameter file for Bloodhound ###
### Created by Hyunsu Kong ###
################################################################################################
#
## Simulation name ##
# Phat ELVIS, FIRE etc.
# simulation_name = pELVIS
simulation_name = FIRE
#
## Constants ##
# Use parameters used for the simulation
# Phat ELVIS: Planck 2016 parameters, h = 0.6751, omega_l=0.6879, omega_m=0.3121, temp_cmb = 2.725 # Kelvin
# FIRE II: Planck 2014 parameters, h=0.702, omega_l=0.728, omega_m=0.272
h = 0.702
omega_l=0.728
omega_m=0.272
temp_cmb = 2.725 # Kelvin
#
# Gravitational constant 
G = 4.30091e-6 # (km/s)^2 * kpc/Msolar
#
# Mass of simulation particles
part_mass = 24697.1 # 1.9693723*1e-06*1e10/h, M_solar
#
## Directory/file paths/simulation numbers ##
base_dir = '/scratch/05097/hk9457/FIREII/m12c_r7100'
snapnum_info_fname = f'{base_dir}/snapshot_times.txt'
out_statement_dir = f'{base_dir}/bloodhound_subhalo_tracking/bloodhound_jobs'
bloodhound_out_statement_fname_base = "bloodhound_result"
infall_criteria_out_statement_fname_base = "infall_criteria_result"
infall_subtree_out_dir = f'{base_dir}/bloodhound_subhalo_tracking/infalling_subhalo_result'
infall_subtree_out_fname_base = "infall_subhalo"
tracked_halo_particle_dir = f'{base_dir}/bloodhound_subhalo_tracking/tracked_halo_particles'
#
# Whether infalling subhalos have already been identified or not. If not, do this step first.
subhalo_selection_done = 0 # 0: false, 1: true
#
# Whether halo particle tracking for identified infalling subhalos have already been done or not.
# If it's already been done, move on to the subhalo analysis step.
halo_particle_tracking_done = 0 # 0: false, 1:true
#
# Simulation numbers/names
#sim_nums = [493, 539, 609, 694, 833, 848, 879, 988, 1107, 1245, 1386]
#sim_nums = [493]
sim_nums = [m12c_r7100]
last_snapnum = 600
#
# Whether the same halos need to be tracked in multiple simulations.
# Example: Phat ELVIS has Disk simulations that are identical to their DMO counterparts.
# I am going to incorporate this later. Right now, let's just make it work for Phat ELVIS.
tracking_order = [disk, dmo]
#
# Does the snapshot particle ID argsort file exist?
# It takes a long time to make these files, but having them reduces the tracking time considerably!
# 1 second per halo to 0 second per halo.
pID_argsort_made = 0 # 0: false, 1: true
#
## Subhalo selection criteria parameters ##
#
# Simulation type (DMO/Disk) from which infalling subhalos are identified, if Phat ELVIS.
run_type = 'disk'
#
# Whether to use actually infalling subhalos only for tracking or to include broken-link tree subhalos.
infalling_only = 1 # 0: false, 1: true
#
# First infall redshifts.
first_infall_z_high = 3.
first_infall_z_low = 0.05
#
# Minimum V_infall to use.
min_vinfall = 4.5
max_vinfall = 70.
#
################################################################################################
# This part is specific only to the Phat ELVIS project and how its halo catalog and merger tree
# data are saved:
# The original halo finding results from Rockstar on which consistent-trees was run on was not
# saved with their particle files. So a separate set of Rockstar results were required just
# for the purpose of getting the halo particle data. However, it means that the halo data from
# the initial set needs to be matched to the data from the new set.
#
# Whether there are two sets of Rockstar results. This should be 0 in most cases!
two_rockstars = 1 # 0: false, 1: true
#
# COM (pMpc) and Vmax (relative difference) range to use for matching halos.
com_range = 0.001
vmax_range = 0.2
################################################################################################
#
## Bloodhound code parameters ##
#
# Fraction of most bound particles at infall to use to compute COM.
most_bound_frac = 0.02
#
# Minumum and maximum number of most bound particles at infall to use to compute COM.
# If number of particles * most_bound_frac is outside of most_bound_min or most_bound_max, either of these values will be used.
# If the total number of particles is below most_bound_min, then Bloodhound will just use all of the particles. But it might be worth removing those subhalos from the analysis completely.
most_bound_min = 50
most_bound_max = 500
#
# Disruption criteria
cv_rapid_drop_frac = 0.3
cv_infall_frac = 0.2
cv_stays_low_frac = 0.4
#
### Output parameters ###
